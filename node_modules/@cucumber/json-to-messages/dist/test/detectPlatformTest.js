"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var assert_1 = __importDefault(require("assert"));
var detectImplementation_1 = __importDefault(require("../src/detectImplementation"));
describe('detectImplementation', function () {
    it('defaults to "ruby"', function () {
        var feature = {};
        assert_1.default.equal(detectImplementation_1.default(feature), 'cucumber-ruby');
    });
    context('when the feature has a status field', function () {
        it('returns "behave"', function () {
            var feature = {
                status: 'passed',
            };
            assert_1.default.equal(detectImplementation_1.default(feature), 'behave');
        });
    });
    context('when the feature has a location field', function () {
        it('returns "behave"', function () {
            var feature = {
                location: 'my/wonderful.feature:3',
            };
            assert_1.default.equal(detectImplementation_1.default(feature), 'behave');
        });
    });
    context('when a step has an "hidden" field', function () {
        it('returns "javascript"', function () {
            var steps = [
                {},
                {
                    hidden: true,
                },
            ];
            var elements = [
                {
                    steps: steps,
                },
            ];
            var feature = {
                elements: elements,
            };
            assert_1.default.equal(detectImplementation_1.default(feature), 'cucumber-js');
        });
    });
    context('when a step has an "arguments" field', function () {
        it('returns "javascript"', function () {
            var args = [];
            var steps = [
                {},
                {
                    arguments: args,
                },
            ];
            var elements = [
                {
                    steps: steps,
                },
            ];
            var feature = {
                elements: elements,
            };
            assert_1.default.equal(detectImplementation_1.default(feature), 'cucumber-js');
        });
    });
});
//# sourceMappingURL=detectPlatformTest.js.map