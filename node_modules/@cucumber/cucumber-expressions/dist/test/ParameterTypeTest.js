"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ParameterType_1 = __importDefault(require("../src/ParameterType"));
var assert = __importStar(require("assert"));
describe('ParameterType', function () {
    it('does not allow ignore flag on regexp', function () {
        assert.throws(function () {
            return new ParameterType_1.default('case-insensitive', /[a-z]+/i, String, function (s) { return s; }, true, true);
        }, { message: "ParameterType Regexps can't use flag 'i'" });
    });
});
//# sourceMappingURL=ParameterTypeTest.js.map