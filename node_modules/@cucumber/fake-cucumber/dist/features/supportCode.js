"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var dsl_1 = require("../src/dsl");
var assert = __importStar(require("assert"));
dsl_1.Before('@before-passed', function () {
    // no-op
});
dsl_1.Before('@before-failed', function () {
    throw new Error('Something went wrong in before hook');
});
dsl_1.After('@after-passed', function () {
    // no-op
});
dsl_1.After('@after-failed', function () {
    throw new Error('Something went wrong in after hook');
});
dsl_1.Given('a passed step', function () {
    // no-op
});
dsl_1.Given('I have {int} cukes', function (cukes) {
    // no-op
});
var Flight = /** @class */ (function () {
    function Flight(name) {
        this.name = name;
    }
    return Flight;
}());
dsl_1.ParameterType({
    name: 'flight',
    regexp: /[A-Z]{3}-[A-Z]{3}/,
    transformer: function (name) {
        return new Flight(name);
    },
});
dsl_1.Given('flight {flight}', function (flight) {
    assert.strictEqual(flight.name, 'LHR-CDG');
});
//# sourceMappingURL=supportCode.js.map