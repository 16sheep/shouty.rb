"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var tag_expressions_1 = __importDefault(require("@cucumber/tag-expressions"));
var messages_1 = require("@cucumber/messages");
var SupportCodeExecutor_1 = __importDefault(require("./SupportCodeExecutor"));
var Hook = /** @class */ (function () {
    function Hook(id, tagExpression, sourceReference, body) {
        this.id = id;
        this.tagExpression = tagExpression;
        this.sourceReference = sourceReference;
        this.body = body;
    }
    Hook.prototype.match = function (pickle) {
        var matches = this.tagExpression === null || this.matchesPickle(pickle);
        return matches
            ? new SupportCodeExecutor_1.default(this.id, this.body, [], null, null)
            : null;
    };
    Hook.prototype.toMessage = function () {
        return new messages_1.messages.Envelope({
            hook: new messages_1.messages.Hook({
                id: this.id,
                tagExpression: this.tagExpression,
                sourceReference: this.sourceReference,
            }),
        });
    };
    Hook.prototype.matchesPickle = function (pickle) {
        var expression = tag_expressions_1.default(this.tagExpression);
        var tagNames = pickle.tags.map(function (tag) { return tag.name; });
        return expression.evaluate(tagNames);
    };
    return Hook;
}());
exports.default = Hook;
//# sourceMappingURL=Hook.js.map